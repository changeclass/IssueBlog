[{"D:\\coder\\React\\react-github\\src\\index.js":"1","D:\\coder\\React\\react-github\\src\\App.js":"2","D:\\coder\\React\\react-github\\src\\components\\head\\header.jsx":"3","D:\\coder\\React\\react-github\\src\\pages\\index\\index.jsx":"4","D:\\coder\\React\\react-github\\src\\pages\\label\\label.jsx":"5","D:\\coder\\React\\react-github\\src\\pages\\milestone\\milestone.jsx":"6","D:\\coder\\React\\react-github\\src\\pages\\post\\post.jsx":"7","D:\\coder\\React\\react-github\\src\\components\\aside\\Aside.jsx":"8","D:\\coder\\React\\react-github\\src\\utils\\localStore.js":"9","D:\\coder\\React\\react-github\\src\\api\\index.js":"10","D:\\coder\\React\\react-github\\src\\api\\ajax.js":"11","D:\\coder\\React\\react-github\\src\\config\\config.js":"12","D:\\coder\\React\\react-github\\src\\utils\\formatTime.js":"13","D:\\coder\\React\\react-github\\src\\utils\\MKtoHtml.js":"14","D:\\coder\\React\\react-github\\src\\utils\\postFormatTime.js":"15","D:\\coder\\React\\react-github\\src\\pages\\post\\comment.jsx":"16","D:\\coder\\React\\react-github\\src\\pages\\auth\\auth.jsx":"17","D:\\coder\\React\\react-github\\src\\utils\\fontColor.js":"18","D:\\coder\\React\\react-github\\src\\pages\\index\\label.jsx":"19","D:\\coder\\React\\react-github\\src\\pages\\admin\\admin.jsx":"20","D:\\coder\\React\\react-github\\src\\pages\\admin\\labels.jsx":"21","D:\\coder\\React\\react-github\\src\\pages\\admin\\post.jsx":"22","D:\\coder\\React\\react-github\\src\\config\\color.js":"23","D:\\coder\\React\\react-github\\src\\pages\\admin\\newPost.jsx":"24"},{"size":495,"mtime":1607309179346,"results":"25","hashOfConfig":"26"},{"size":1778,"mtime":1607485792156,"results":"27","hashOfConfig":"26"},{"size":497,"mtime":1607427043168,"results":"28","hashOfConfig":"26"},{"size":4168,"mtime":1607569867851,"results":"29","hashOfConfig":"26"},{"size":1772,"mtime":1607483247455,"results":"30","hashOfConfig":"26"},{"size":102,"mtime":1607303337758,"results":"31","hashOfConfig":"26"},{"size":2511,"mtime":1607426897756,"results":"32","hashOfConfig":"26"},{"size":315,"mtime":1607326017094,"results":"33","hashOfConfig":"26"},{"size":571,"mtime":1607415825689,"results":"34","hashOfConfig":"26"},{"size":1781,"mtime":1607567628394,"results":"35","hashOfConfig":"26"},{"size":1785,"mtime":1607568763907,"results":"36","hashOfConfig":"26"},{"size":591,"mtime":1607424870999,"results":"37","hashOfConfig":"26"},{"size":659,"mtime":1607570120995,"results":"38","hashOfConfig":"26"},{"size":425,"mtime":1607342135456,"results":"39","hashOfConfig":"26"},{"size":368,"mtime":1607389971058,"results":"40","hashOfConfig":"26"},{"size":4583,"mtime":1607431138963,"results":"41","hashOfConfig":"26"},{"size":2321,"mtime":1607482232052,"results":"42","hashOfConfig":"26"},{"size":1273,"mtime":1607428994585,"results":"43","hashOfConfig":"26"},{"size":4505,"mtime":1607485136656,"results":"44","hashOfConfig":"26"},{"size":668,"mtime":1607566868308,"results":"45","hashOfConfig":"26"},{"size":3351,"mtime":1607501737635,"results":"46","hashOfConfig":"26"},{"size":4799,"mtime":1607566608667,"results":"47","hashOfConfig":"26"},{"size":629,"mtime":1607501282565,"results":"48","hashOfConfig":"26"},{"size":2571,"mtime":1607569639539,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1dk1shh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\coder\\React\\react-github\\src\\index.js",[],["107","108"],"D:\\coder\\React\\react-github\\src\\App.js",["109","110","111"],"// import { Router, Route, Link } from 'react-router'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nimport { Layout } from 'antd';\n\n// 导入共用组件\nimport MyHeader from './components/head/header'\nimport Aside from './components/aside/Aside'\n\n// 导入路由组件\nimport Index from './pages/index/index'\nimport LabelPost from './pages/index/label'\nimport Label from './pages/label/label'\nimport Milestone from './pages/milestone/milestone'\nimport Post from './pages/post/post'\nimport OAuth from './pages/auth/auth'\nimport Admin from './pages/admin/admin'\n\nconst { Header, Footer, Content } = Layout;\n\n// 根组件\nfunction App () {\n  return (\n    <Layout>\n      <Router>\n        <Header>\n          <MyHeader>\n            <Link to='/'>主页</Link>\n            <Link to='/label'>标签</Link>\n            <Link to='/category'>分类</Link>\n          </MyHeader>\n        </Header>\n        <Content>\n          <div>\n            <Switch>\n              <Route path=\"/label/:label\">\n                <LabelPost />\n              </Route>\n              <Route path=\"/label/\">\n                <Label />\n              </Route>\n              <Route path=\"/category\">\n                <Milestone />\n              </Route>\n              <Route path=\"/post/:number\">\n                <Post />\n              </Route>\n              <Route path=\"/OAuth\">\n                <OAuth />\n              </Route>\n              <Route path=\"/admin\">\n                <Admin />\n              </Route>\n              <Route path=\"/\">\n                <Index />\n              </Route>\n            </Switch>\n          </div>\n        </Content>\n      </Router>\n      <Footer>Footer</Footer>\n    </Layout >\n\n  );\n}\n\nexport default App;\n","D:\\coder\\React\\react-github\\src\\components\\head\\header.jsx",["112","113","114"],"import React, { useEffect, useState } from 'react'\r\nimport { Row, Col } from 'antd'\r\n\r\nimport './index.less'\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 12 }\r\n}\r\n\r\nexport default function Header(childrens) {\r\n  return (\r\n    <Row>\r\n      <Col span={8}>\r\n        <h1>\r\n          <a href='/'>小康博客</a>\r\n        </h1>\r\n      </Col>\r\n      <Col span={8}></Col>\r\n      <Col span={8} className='navigation'>\r\n        {childrens.children}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","D:\\coder\\React\\react-github\\src\\pages\\index\\index.jsx",["115","116"],"D:\\coder\\React\\react-github\\src\\pages\\label\\label.jsx",[],"D:\\coder\\React\\react-github\\src\\pages\\milestone\\milestone.jsx",[],"D:\\coder\\React\\react-github\\src\\pages\\post\\post.jsx",["117"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { reqGetIssueBody, reqMKtoHTML } from '../../api'\r\nimport { Divider, Skeleton, Row, Col, Tag } from 'antd'\r\nimport postFormatDate from '../../utils/postFormatTime.js'\r\n\r\nimport Comments from './comment'\r\nimport './post.less'\r\n\r\nexport default function Post() {\r\n  const history = useHistory()\r\n  const [post, setPost] = useState({})\r\n  const [labels, setLabels] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const pathname = history.location.pathname\r\n  const number = pathname.split('/').pop()\r\n\r\n  async function getBody(number) {\r\n    const post = await reqGetIssueBody(number)\r\n    const htmlText = await reqMKtoHTML(post.body || '')\r\n    const result = {\r\n      title: post.title,\r\n      MKRaw: post.body,\r\n      html: htmlText,\r\n      updated_at: post.updated_at,\r\n      created_at: post.created_at,\r\n      // labels: post.labels,\r\n      user: post.user,\r\n      comments_url: post.comments_url,\r\n      comments: post.comments\r\n    }\r\n\r\n    setLoading(false)\r\n    // console.log(newPost)\r\n    return { post: result, labels: post.labels }\r\n    // console.log(number)\r\n  }\r\n  useEffect(() => {\r\n    getBody(number).then((result) => {\r\n      setPost(result.post)\r\n      setLabels(result.labels)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className='post_container'>\r\n      <div className='post_card'>\r\n        <div className='post_header'>\r\n          <h2>{post.title}</h2>\r\n        </div>\r\n        <Divider />\r\n        <Skeleton loading={loading}>\r\n          <article dangerouslySetInnerHTML={{ __html: post.html }}></article>\r\n        </Skeleton>\r\n        <Divider />\r\n        <div className='post-footer'>\r\n          <Row>\r\n            <Col span={18}>\r\n              <div className='post-tag'>\r\n                {labels.map((item, index) => {\r\n                  return (\r\n                    <Tag key={index} color={'#' + item.color}>\r\n                      {item.name}\r\n                    </Tag>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Col>\r\n            <Col span={6}>\r\n              <div className='created-time'>\r\n                最后编辑于{postFormatDate(post.updated_at)}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Divider />\r\n        <div className='post-comment'>\r\n          <Comments number={number} total={post.comments}></Comments>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\coder\\React\\react-github\\src\\components\\aside\\Aside.jsx",["118"],"import React, { useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default function Aside() {\r\n  // const [current, setCurrent] = useState()\r\n  // function handleClick() {\r\n  //   console.log(1)\r\n  // }\r\n  return (\r\n    <div>\r\n      <Button type='primary'>Primary Button</Button>\r\n    </div>\r\n  )\r\n}\r\n","D:\\coder\\React\\react-github\\src\\utils\\localStore.js",[],"D:\\coder\\React\\react-github\\src\\api\\index.js",[],"D:\\coder\\React\\react-github\\src\\api\\ajax.js",[],"D:\\coder\\React\\react-github\\src\\config\\config.js",[],"D:\\coder\\React\\react-github\\src\\utils\\formatTime.js",[],"D:\\coder\\React\\react-github\\src\\utils\\MKtoHtml.js",[],"D:\\coder\\React\\react-github\\src\\utils\\postFormatTime.js",[],"D:\\coder\\React\\react-github\\src\\pages\\post\\comment.jsx",["119","120"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Tooltip,\r\n  List,\r\n  Comment,\r\n  Pagination,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Avatar,\r\n  Skeleton\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport config from '../../config/config'\r\nimport { reqGetCommentList, reqSendComment } from '../../api'\r\nimport localStore from '../../utils/localStore'\r\nimport Auth from '../auth/auth'\r\nimport Axios from 'axios'\r\nimport marked from 'marked'\r\nconst { TextArea } = Input\r\nconst Editor = ({ onChange, onSubmit, submitting, value, user }) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      {!user.login ? (\r\n        <Auth />\r\n      ) : (\r\n        <Button\r\n          htmlType='submit'\r\n          loading={submitting}\r\n          onClick={onSubmit}\r\n          type='primary'\r\n        >\r\n          Add Comment\r\n        </Button>\r\n      )}\r\n    </Form.Item>\r\n  </>\r\n)\r\n\r\nexport default function Comments(props) {\r\n  let { number, total = 0 } = props\r\n  // 获取评论列表\r\n  const [commentList, setCommentList] = useState([])\r\n  // 当前页码\r\n  const [page, setPage] = useState(1)\r\n  // 是否发表中\r\n  const [submitting, setSubmitting] = useState(false)\r\n  // 发表的内容\r\n  const [value, setValue] = useState('')\r\n  // 存放用户\r\n  const [user, setUser] = useState({})\r\n  // 获取状态\r\n  const [loading, setLoading] = useState(false)\r\n  // 获取评论\r\n  const getComment = async (number, page) => {\r\n    setLoading(true)\r\n    const result = await reqGetCommentList(number, page)\r\n    // 临时存放评论\r\n    const t_commentList = []\r\n    result.forEach((item) => {\r\n      t_commentList.push({\r\n        author: item.user.login,\r\n        avatar: item.user.avatar_url,\r\n        content: marked(item.body),\r\n        datetime: (\r\n          <Tooltip\r\n            title={moment(new Date(item.created_at), 'days').format(\r\n              'YYYY-MM-DD HH:mm:ss'\r\n            )}\r\n          >\r\n            <span>{moment(new Date(item.created_at), 'days').fromNow()}</span>\r\n          </Tooltip>\r\n        )\r\n      })\r\n    })\r\n    setCommentList(t_commentList)\r\n    setLoading(false)\r\n  }\r\n  // 提交事件\r\n  const handleSubmit = async () => {\r\n    setSubmitting(true)\r\n    const result = await reqSendComment(number, value)\r\n    setSubmitting(false)\r\n    total++\r\n    getComment(number, 1)\r\n  }\r\n  // 输入框改变\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  useEffect(() => {\r\n    const token = localStore.getToken()\r\n    console.log(typeof token)\r\n    if (typeof token === 'string') {\r\n      Axios({\r\n        headers: {\r\n          Authorization: 'Token ' + token\r\n        },\r\n        method: 'get',\r\n        url: 'https://api.github.com/user'\r\n      }).then((result) => {\r\n        setUser(result.data)\r\n      })\r\n    }\r\n\r\n    getComment(number, page)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Comment\r\n        avatar={\r\n          <Avatar\r\n            src={\r\n              !user.login\r\n                ? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\r\n                : user.avatar_url\r\n            }\r\n            alt={!user.login ? '' : user.name}\r\n          />\r\n        }\r\n        content={\r\n          <Editor\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            submitting={submitting}\r\n            value={value}\r\n            user={user}\r\n          />\r\n        }\r\n      />\r\n      <Skeleton loading={loading}>\r\n        <List\r\n          className='comment-list'\r\n          header={`共 ${total} 评论`}\r\n          itemLayout='horizontal'\r\n          dataSource={commentList}\r\n          renderItem={(item) => (\r\n            <li>\r\n              <Comment\r\n                actions={item.actions}\r\n                author={item.author}\r\n                avatar={item.avatar}\r\n                content={\r\n                  <div>\r\n                    <div\r\n                      className='markdown-body'\r\n                      dangerouslySetInnerHTML={{ __html: item.content }}\r\n                    ></div>\r\n                  </div>\r\n                }\r\n                datetime={item.datetime}\r\n              />\r\n            </li>\r\n          )}\r\n        />\r\n      </Skeleton>\r\n      {total > 0 ? (\r\n        <Pagination\r\n          defaultCurrent={1}\r\n          total={total}\r\n          pageSize={config.comment.page_size}\r\n          onChange={(page, pageSize) => {\r\n            setPage(page)\r\n            getComment(number, page)\r\n          }}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","D:\\coder\\React\\react-github\\src\\pages\\auth\\auth.jsx",["121","122"],"import querystring from 'querystring'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button } from 'antd'\r\nimport { EventEmitter } from 'events'\r\nimport localStore from '../../utils/localStore'\r\nimport axios from 'axios'\r\naxios.defaults.headers = {\r\n  Accept: 'application/json'\r\n}\r\nexport default function Auth(props) {\r\n  // const [code, setCode] = useState(undefined)\r\n  const client_id = 'c9c764ff61bbe16744c3'\r\n  const client_secret = '6ebcf177a9f3c0eee4f095f3462c6eb2a3472eaa'\r\n\r\n  const githubLogin = () => {\r\n    let popWin = window.open(\r\n      `https://github.com/login/oauth/authorize?client_id=${client_id}&scope=public_repo`,\r\n      null,\r\n      'width=600,height=400'\r\n    )\r\n\r\n    let code\r\n    let eventEmitter = new EventEmitter()\r\n\r\n    let checkCode = () => {\r\n      try {\r\n        let query = popWin.location.search.substring(1)\r\n\r\n        code = querystring.parse(query).code\r\n\r\n        if (typeof code !== 'undefined') {\r\n          clearInterval(intervalId)\r\n          popWin.close()\r\n          eventEmitter.emit('code', code)\r\n        }\r\n      } catch (err) {}\r\n    }\r\n\r\n    let intervalId = setInterval(checkCode, 1000)\r\n\r\n    eventEmitter.on('code', (code) => {\r\n      console.log(code)\r\n      axios\r\n        .post(\r\n          'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token',\r\n          {\r\n            client_id,\r\n            client_secret,\r\n            code\r\n          }\r\n        )\r\n        .then((result) => {\r\n          const token = result.data.access_token\r\n          console.log(token, result.data, 'token')\r\n          axios.defaults.headers = {\r\n            Authorization: 'Token ' + token\r\n          }\r\n          axios.get(`https://api.github.com/user`).then((res) => {\r\n            let { name, avatar_url, email } = res.data\r\n            console.log(name, avatar_url, email)\r\n            localStore.saveToken(token)\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  // const githubGetAccessToken = (code) => {\r\n  //   console.log(code)\r\n  //   axios\r\n  //     .post('https://api.github.com/login/oauth/access_token', {\r\n  //       client_id,\r\n  //       client_secret,\r\n  //       code\r\n  //     })\r\n  //     .then((result) => {\r\n  //       console.log(result)\r\n  //     })\r\n  // }\r\n\r\n  return <Button onClick={githubLogin}>登录</Button>\r\n}\r\n","D:\\coder\\React\\react-github\\src\\utils\\fontColor.js",["123"],"// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (color) {\r\n  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.colorRgb = function () {\r\n    var sColor = this.toLowerCase();\r\n    if (sColor && reg.test(sColor)) {\r\n      if (sColor.length === 4) {\r\n        var sColorNew = \"#\";\r\n        for (var i = 1; i < 4; i += 1) {\r\n          sColorNew += sColor\r\n            .slice(i, i + 1)\r\n            .concat(sColor.slice(i, i + 1));\r\n        }\r\n        sColor = sColorNew;\r\n      }\r\n      //处理六位的颜色值\r\n      var sColorChange = [];\r\n      for (var i = 1; i < 7; i += 2) {\r\n        sColorChange.push(parseInt(\"0x\" + sColor.slice(i, i + 2)));\r\n      }\r\n      return \"RGB(\" + sColorChange.join(\",\") + \")\";\r\n    } else {\r\n      return sColor;\r\n    }\r\n  };\r\n  var flag = \"white\";\r\n  var rgbColor = color.colorRgb();\r\n  rgbColor = rgbColor.replace(\"RGB(\", \"\");\r\n  rgbColor = rgbColor.replace(\")\", \"\");\r\n  // console.log(rgbColor);\r\n  var temp = rgbColor.split(\",\");\r\n\r\n  if (parseInt(temp[0]) + parseInt(temp[1]) + parseInt(temp[2]) > 450) {\r\n    // console.log(parseInt(temp[0]) + parseInt(temp[1]) + parseInt(temp[2]));\r\n    flag = \"black\";\r\n  }\r\n  return flag;\r\n}","D:\\coder\\React\\react-github\\src\\pages\\index\\label.jsx",["124","125"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Col, Row, Avatar, Button, Tag, Skeleton, PageHeader } from 'antd'\r\nimport {\r\n  CaretUpOutlined,\r\n  CaretDownOutlined,\r\n  CommentOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport { reqGetIssusByLabel } from '../../api'\r\nimport config from '../../config/config'\r\nimport './index.less'\r\nimport formatTime from '../../utils/formatTime'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst { Meta } = Card\r\nexport default function LabelPost() {\r\n  // 定义当前页码\r\n  const [page, setPage] = useState(1)\r\n  // 定义issue存储列表\r\n  const [issueList, setIssueList] = useState([])\r\n  // 卡片是否在加载\r\n  const [cardLoading, setCardLoading] = useState(true)\r\n  const history = useHistory()\r\n  const pathname = history.location.pathname\r\n  const label = pathname.split('/').pop()\r\n  // 获取issue\r\n  const getIssuesList = async () => {\r\n    const result = await reqGetIssusByLabel(page, label)\r\n    // console.log(result)\r\n    setCardLoading(false)\r\n    setIssueList(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getIssuesList()\r\n  }, [page])\r\n  // 请求获取\r\n  return (\r\n    <div className='site-card-wrapper'>\r\n      <PageHeader\r\n        className='site-page-header'\r\n        onBack={() => {\r\n          history.goBack(1)\r\n        }}\r\n        title={label}\r\n        // subTitle={}\r\n      />\r\n      <Skeleton active loading={cardLoading}>\r\n        <Row gutter={[16, 24]}>\r\n          {issueList.map((item, index) => {\r\n            console.log(item)\r\n            return (\r\n              <Col span={6} key={index}>\r\n                <span\r\n                  onClick={(event) => {\r\n                    event.stopPropagation()\r\n                    history.push('/post/' + item.number)\r\n                  }}\r\n                >\r\n                  <Card\r\n                    style={{ width: 280 }}\r\n                    cover={\r\n                      <img src='https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png' />\r\n                    }\r\n                    hoverable\r\n                    actions={[\r\n                      item.labels.length > 0 ? (\r\n                        <Tag\r\n                          color={'#' + item.labels[0].color}\r\n                          key={item.labels[0].id}\r\n                        >\r\n                          {item.labels[0].name}\r\n                        </Tag>\r\n                      ) : (\r\n                        <Tag color={config.default_label.color}>\r\n                          {config.default_label.name}\r\n                        </Tag>\r\n                      ),\r\n                      <span>\r\n                        <CommentOutlined />\r\n                        {item.comments}\r\n                      </span>,\r\n                      <span\r\n                        onClick={(event) => {\r\n                          event.stopPropagation()\r\n                          history.push('/post/' + item.number)\r\n                        }}\r\n                      >\r\n                        查看\r\n                      </span>\r\n                    ]}\r\n                  >\r\n                    <Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          src={\r\n                            config.avatar ? config.avatar : item.user.avatar_url\r\n                          }\r\n                        />\r\n                      }\r\n                      title={item.title}\r\n                      description={'发表于' + formatTime(item.created_at)}\r\n                    />\r\n                  </Card>\r\n                </span>\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n      </Skeleton>\r\n\r\n      <div className='page'>\r\n        {page > 1 ? (\r\n          <Button\r\n            type='primary'\r\n            shape='round'\r\n            icon={<CaretUpOutlined />}\r\n            size='large'\r\n            onClick={() => {\r\n              const newPage = page - 1\r\n              setPage(newPage)\r\n              getIssuesList()\r\n            }}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {issueList.length === config.post.page_size ? (\r\n          <Button\r\n            type='primary'\r\n            shape='round'\r\n            icon={<CaretDownOutlined />}\r\n            size='large'\r\n            onClick={() => {\r\n              const newPage = page + 1\r\n              setPage(newPage)\r\n              getIssuesList()\r\n            }}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\coder\\React\\react-github\\src\\pages\\admin\\admin.jsx",["126","127","128"],"D:\\coder\\React\\react-github\\src\\pages\\admin\\labels.jsx",[],"D:\\coder\\React\\react-github\\src\\pages\\admin\\post.jsx",["129","130","131","132","133"],"D:\\coder\\React\\react-github\\src\\config\\color.js",[],"D:\\coder\\React\\react-github\\src\\pages\\admin\\newPost.jsx",["134","135","136","137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":13},{"ruleId":"143","severity":1,"message":"149","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"150","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"151","line":5,"column":7,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":34,"column":6,"nodeType":"154","endLine":34,"endColumn":12,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":52,"column":23,"nodeType":"158","endLine":52,"endColumn":104},{"ruleId":"152","severity":1,"message":"159","line":44,"column":6,"nodeType":"154","endLine":44,"endColumn":8,"suggestions":"160"},{"ruleId":"143","severity":1,"message":"150","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"161","line":85,"column":11,"nodeType":"145","messageId":"146","endLine":85,"endColumn":17},{"ruleId":"152","severity":1,"message":"162","line":110,"column":6,"nodeType":"154","endLine":110,"endColumn":8,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"150","line":2,"column":17,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"149","line":2,"column":27,"nodeType":"145","messageId":"146","endLine":2,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":19,"column":16,"nodeType":"145","messageId":"166","endLine":19,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":37,"column":6,"nodeType":"154","endLine":37,"endColumn":12,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"157","line":64,"column":23,"nodeType":"158","endLine":64,"endColumn":104},{"ruleId":"143","severity":1,"message":"150","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"149","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"168","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"168","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"169","line":11,"column":9,"nodeType":"145","messageId":"146","endLine":11,"endColumn":20},{"ruleId":"152","severity":1,"message":"170","line":120,"column":6,"nodeType":"154","endLine":120,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":131,"column":15,"nodeType":"158","endLine":135,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":138,"column":15,"nodeType":"158","endLine":138,"endColumn":18},{"ruleId":"143","severity":1,"message":"174","line":9,"column":7,"nodeType":"145","messageId":"146","endLine":9,"endColumn":12},{"ruleId":"143","severity":1,"message":"175","line":17,"column":10,"nodeType":"145","messageId":"146","endLine":17,"endColumn":22},{"ruleId":"143","severity":1,"message":"176","line":17,"column":24,"nodeType":"145","messageId":"146","endLine":17,"endColumn":39},{"ruleId":"143","severity":1,"message":"177","line":19,"column":10,"nodeType":"145","messageId":"146","endLine":19,"endColumn":20},{"ruleId":"143","severity":1,"message":"178","line":19,"column":22,"nodeType":"145","messageId":"146","endLine":19,"endColumn":35},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Aside' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'layout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIssuesList'. Either include it or remove the dependency array.","ArrayExpression",["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'number'. Either include it or remove the dependency array.",["182"],"'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'number' and 'page'. Either include them or remove the dependency array.",["183"],"no-redeclare","'i' is already defined.","redeclared",["184"],"'Button' is defined but never used.","'ColumnGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRepoInfo'. Either include it or remove the dependency array.",["185"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'input' is defined but never used.","'inputVisible' is assigned a value but never used.","'setInputVisible' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"186","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [getIssuesList, page]",{"range":"195","text":"196"},"Update the dependencies array to be: [number]",{"range":"197","text":"198"},"Update the dependencies array to be: [number, page]",{"range":"199","text":"200"},{"range":"201","text":"196"},"Update the dependencies array to be: [getRepoInfo]",{"range":"202","text":"203"},[941,947],"[getIssuesList, page]",[1339,1341],"[number]",[2789,2791],"[number, page]",[1067,1073],[3054,3056],"[getRepoInfo]"]